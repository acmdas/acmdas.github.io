#+title: Tech Stuff
#+date: <2022-01-10 16:39>
#+description: 
#+filetags: blogging emacs tech

Yesterday, in our “Hello World” post, I promised/threatened that I would someday get around to a) talking about why we dropped the Wordpress platform and b) talking about the tech behind the blog now.

Today I’ve been horsing around with the tech stuff, so that’s the topic that’s risen to the top for this post. The cream, if you will.

I mentioned Emacs and org-static-blog yesterday, so just a few words on each.

Emacs is perhaps the oldest “programmer’s text editor” in current use — it first saw the light of day in 1976, and its present incarnation has been in constant use since 1983.

I’ve used it off-and-on since the late ‘80s and I’ve done most of my writing with it since I retired (and no longer had to deliver work in Microsoft Word format!).

It’s not a “word processor” in the sense that it’s mainly just for putting letters “on the page” or into a file, although there are ways to suggest that the letters be bold, italic and the like. It’s frequently used ot prepare text for publication by adding codes to the text that other tools interpret to then output “camera-ready copy”. And that’s about as far into the weeds as I’m willing to go on that topic just now. You’re welcome!

I also mentioned “org-static-blog” which highlights another side of Emacs, which is that it’s not only used to write software programs, but it’s also an environment for running software programs. In fact, it’s been, only partly facetiously, called an operating system that can also be used as a text editor.

It’s itself written in part in the programming language Lisp (another survivor, being the second oldest programming language still in regular use, having been first specified in 1958) and users can write programs in its eLisp that can either modify the way that Emacs looks and acts, making it incredibly flexible.

Emacs packages, as these eLisp programs are called, can also transform text that’s entered using Emacs. For example, an Emacs user could key in the content of a blog post like this one, then by running an eLisp package, have it saved as a new entry in a blog, with an entry on the blog’s home page, added to an archive page, an rss feed updated, and added to any appropriate tag lists. Basically everything that a platform like Wordpress or Blogger does while giving you, me, the end user, almost complete control.

That’s what org-static-blog does for this site. “org” for “org-mode” which is, well, this is already a long post, for now we’ll just say it’s one way to use Emacs. “static” for “static web site” - this blog isn’t a bunch of bits in a database that gets spit out and turned into web pages every time someone wants to view them. The web pages are generated once, and exist as individual files on a server - they’re “static”. And “blog” for, well, blog.

org-static-blog is written and maintained by [[https://bastibe.de][Bastian Bechtold]], a German software developer who develops software and makes it available for free - what we know as “Free Open Source Software” or FOSS. FOSS is yet another topic for another post, for now I’ll just link to [[https://github.com/bastibe/org-static-blog][org-static-blog online]] and leave it at that.

I’ve spent much of my spare time yesterday and today getting things looking and working like this. It may evolve as time goes by — in fact, I can guarantee that it will, but for now, that’s the way it is, Monday, January 10, 2022. G’day.
